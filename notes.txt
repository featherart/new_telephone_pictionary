notes on things I've tried and where I'm at:

// all of this was in an attempt to make drawing work in the mobile environment
  // none of it worked :(
  // leaving it here as notes so I know what I tried at least
    
  // start tracking the touches, move the pen to the beginning of a line
  // $canvas.bind('touchstart', function (event) {
  //   alert("in touchstart");
  //   var xy = extractXY(event.originalEvent.touches[0]);
  //   ctx.moveTo(xy.x, xy.y);
  //   event.preventDefault();
  //   return false;
  // });
  // draw a line from the last point to this one
  // $canvas.bind('touchmove', function (event) {
  //   alert("in touch move");
  //   var xy = extractXY(event.originalEvent.touches[0]);
  //   ctx.lineTo(xy.x, xy.y);
  //   ctx.stroke();
  //   event.preventDefault();
  //   return false;
  // });

  //$canvas.addEventListener( 'touchstart', onTouchStart, false );
  // $canvas.ontouchstart = function(e) {
  //   alert("in canvas touchstart listener");
  //   if (e.touches) e = e.touches[0];
  //   return false;
  // }

  // // Disable Page Move for mobile
  //   document.body.addEventListener('touchmove',function(event){
  //     event.preventDefault();
  //   },false);
 
  // // Events
  // document.body.addEventListener('touchstart', function(e) {
  //   alert("in touchstart: " + e);
  //   var x = e.targetTouches[0].pageX - this.offsetLeft,
  //       y = e.targetTouches[0].pageY - this.offsetTop;
  //   context.beginPath();
  //   context.moveTo(x,y);
  //   //$('body').addClass('noselect');
  //   button_is_down = true;
  // });

  // document.body.addEventListener('touchend', function(e) {
  //   alert("in touchend: " + e);
  //   if(button_is_down) {
  //   var x = e.pageX - this.offsetLeft,
  //       y = e.pageY - this.offsetTop;
  //     context.lineTo(x,y);
  //     context.stroke();
  //   }
  //   button_is_down = false;
  //   //$('body').removeClass('noselect');
  // });
  
  // document.body.addEventListener('touchmove', function(e) {
  //   alert("in touchmove: " + e);
  //   if(button_is_down) {
  //     var x = e.pageX - $canvas[0].offsetLeft,
  //         y = e.pageY - $canvas[0].offsetTop;
  //     context.lineTo(x,y);
  //     context.stroke();
  //   }
  // }); 


This was the idea for a nested game creation form but it only renders from index and the submit has never worked (error from sending players a text)
<%= form_for(@storyline) do |f| %>
  <%= fields_for(@player) do |p| %>  
    <%= p.text_field :name, placeholder: "enter player's name", required: true %>
    <%= p.text_field :phone_number, placeholder: "enter player's text number", required: true %><br>
    <%= p.text_field :name, placeholder: "enter player's name" %>
    <%= p.text_field :phone_number, placeholder: "enter player's text number"  %><br>
  <% end %>
   <%= f.text_field :story_name, placeholder: "please enter a name for this story", required: true, autofocus: true %>
   <button type="submit" id="submit_button" class="small radius button">send it</button>
<% end %>

Storyline form should take:
story name
story timeline (how long active)
number of players

then dynamically generate a form for that many players
